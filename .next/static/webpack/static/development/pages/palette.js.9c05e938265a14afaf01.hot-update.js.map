{"version":3,"file":"static/webpack/static/development/pages/palette.js.9c05e938265a14afaf01.hot-update.js","sources":["webpack:///./components/ObjectTree.jsx"],"sourcesContent":["import { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { MdExpandMore, MdChevronRight } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst literalToTreeItem = literal => {\n  switch (typeof literal) {\n    case \"function\":\n      return <TreeItem nodeId={uuid()} label=\"function\" />;\n    default:\n      return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n  }\n};\n\nconst objectToTreeItem = object =>\n  Object.entries(object).map(([key, value]) => (\n    <TreeItem nodeId={uuid()} label={key.toString()}>\n      {toTreeItems(value)}\n    </TreeItem>\n  ));\n\nconst toTreeItems = thing => {\n  if (typeof thing === \"object\") {\n    // don't render empty objects\n    if (JSON.stringify(thing) === \"{}\") return <></>;\n    else return objectToTreeItem(thing);\n  } else return literalToTreeItem(thing);\n};\n\nexport const ObjectTree = ({ object }) => (\n  <TreeView\n    defaultCollapseIcon={<MdExpandMore />}\n    defaultExpandIcon={<MdChevronRight />}\n  >\n    {toTreeItems(object)}\n  </TreeView>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/palette.js.0c51e02580f9947bdf4c.hot-update.js","sources":["webpack:///./components/ObjectTree.jsx"],"sourcesContent":["import { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { MdExpandMore, MdChevronRight } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst defaultLiteralToTreeItem = literal => {\n  switch (typeof literal) {\n    case \"function\":\n      return (\n        <TreeItem\n          nodeId={uuid()}\n          label={<pre class=\"prettyprint\">{literal.toString()}</pre>}\n        />\n      );\n    default:\n      return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n  }\n};\n\nconst objectToTreeItem = (object, literalToTreeItem) =>\n  Object.entries(object).map(([key, value]) => (\n    <TreeItem nodeId={uuid()} label={key.toString()}>\n      {toTreeItems(value, literalToTreeItem)}\n    </TreeItem>\n  ));\n\nconst toTreeItems = (thing, customLiteralToTreeItem) => {\n  let literalToTreeItem =\n    customLiteralToTreeItem === undefined\n      ? defaultLiteralToTreeItem\n      : customLiteralToTreeItem;\n\n  if (typeof thing === \"object\") {\n    // don't render empty objects\n    if (JSON.stringify(thing) === \"{}\") return <></>;\n    else return objectToTreeItem(thing, literalToTreeItem);\n  } else return literalToTreeItem(thing);\n};\n\nexport const ObjectTree = ({ object, customLiteralToTreeItem, className }) => {\n  return (\n    <TreeView\n      defaultCollapseIcon={<MdExpandMore />}\n      defaultExpandIcon={<MdChevronRight />}\n    >\n      {toTreeItems(object, customLiteralToTreeItem)}\n    </TreeView>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}
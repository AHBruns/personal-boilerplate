{"version":3,"file":"static/development/pages/palette.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ObjectTree.jsx","webpack:///./pages/palette.jsx","webpack:///./utils/constants.js","webpack:///./utils/helpers.js","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/lab\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-icons/md\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"uuid/v4\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MdExpandMore, MdChevronRight } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst useStyles = makeStyles({\n  treeView: {\n    marginLeft: \"-9px\"\n  }\n});\n\nconst defaultLiteralToTreeItem = literal => {\n  switch (typeof literal) {\n    case \"function\":\n      return (\n        <TreeItem\n          nodeId={uuid()}\n          label={<pre class=\"prettyprint\">{literal.toString()}</pre>}\n        />\n      );\n    default:\n      return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n  }\n};\n\nconst objectToTreeItem = (object, literalToTreeItem) =>\n  Object.entries(object).map(([key, value]) => (\n    <TreeItem nodeId={uuid()} label={key.toString()}>\n      {toTreeItems(value, literalToTreeItem)}\n    </TreeItem>\n  ));\n\nconst toTreeItems = (thing, customLiteralToTreeItem) => {\n  let literalToTreeItem =\n    customLiteralToTreeItem === undefined\n      ? defaultLiteralToTreeItem\n      : customLiteralToTreeItem;\n\n  if (typeof thing === \"object\") {\n    // don't render empty objects\n    if (JSON.stringify(thing) === \"{}\") return <></>;\n    else return objectToTreeItem(thing, literalToTreeItem);\n  } else return literalToTreeItem(thing);\n};\n\nexport const ObjectTree = ({ object, customLiteralToTreeItem, className }) => {\n  const classes = useStyles();\n  return (\n    <TreeView\n      defaultCollapseIcon={<MdExpandMore />}\n      defaultExpandIcon={<MdChevronRight />}\n      className={classes.treeView}\n    >\n      {toTreeItems(object, customLiteralToTreeItem)}\n    </TreeView>\n  );\n};\n","import Head from \"next/head\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { useTheme, Divider, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport { makePageTitle } from \"../utils/helpers\";\nimport { ObjectTree } from \"../components/ObjectTree\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    padding: \"32px\"\n  },\n  header: {},\n  preBlock: {\n    margin: \"16px\",\n    borderRadius: \"4px\",\n    fontFamily: \"Source Code Pro\",\n    border: \"1px solid black\",\n    borderRadius: \"4px\",\n    padding: \"4px 10px\",\n    overflowX: \"scroll\"\n  }\n});\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <>\n      <Head>\n        <title>{makePageTitle(\"Palette\")}</title>\n      </Head>\n      <div className={classes.wrapper}>\n        <Typography variant=\"h5\">Explainer</Typography>\n        <Divider />\n        <Typography variant=\"body1\">\n          Below is the global MaterialUI theme object used throughout this\n          project. Any styles which are used in more than one place or are\n          expected to be used in more than one place throughout this codebase\n          should be defined via this theme object rather than via in-line\n          styles. When injecting one-off styles, developers should use this\n          preference order:\n          <ol>\n            <li>MaterialUI makeStyles</li>\n            <li>jss</li>\n            <li>style props</li>\n          </ol>\n        </Typography>\n        <Typography variant=\"h5\">Theme</Typography>\n        <Divider />\n        <ObjectTree\n          object={theme}\n          customLiteralToTreeItem={literal => {\n            switch (typeof literal) {\n              case \"function\":\n                return (\n                  <>\n                    <Head>\n                      <link\n                        href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap\"\n                        rel=\"stylesheet\"\n                      />\n                    </Head>\n                    <TreeItem\n                      nodeId={uuid()}\n                      label={\n                        <pre className={`${classes.preBlock}`}>\n                          <code\n                            className={`language-javascript ${classes.codeBlock}`}\n                          >\n                            {literal.toString()}\n                          </code>\n                        </pre>\n                      }\n                    />\n                  </>\n                );\n              case \"string\": {\n                if (literal.startsWith(\"rgba(\") && literal.endsWith(\")\"))\n                  return (\n                    <>\n                      <div className=\"rgba-wrapper\">\n                        <TreeItem nodeId={uuid()} label={literal} />\n                      </div>\n                      {/*\n                       * Using jss because it's the cleanest way to inject these styles.\n                       * makeStyles doesn't work because it's a hook & style prop is highly discouraged\n                       */}\n                      <style jsx>{`\n                        .rgba-wrapper {\n                          color: ${literal};\n                        }\n                      `}</style>\n                    </>\n                  );\n                return <TreeItem nodeId={uuid()} label={literal} />;\n              }\n              default:\n                return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","export const applicationName = \"Default\";\n","import { applicationName } from \"./constants\";\n\nexport const makePageTitle = pageName => `${applicationName} | ${pageName}`;\n","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/lab\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-icons/md\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"uuid/v4\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAWA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AALA;AAgBA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA;AA+CA;AAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuDA;;;;;;;;;;;;AC1GA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}
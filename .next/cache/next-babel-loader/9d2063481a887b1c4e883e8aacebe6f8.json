{"ast":null,"code":"var _jsxFileName = \"/Users/vonnegut/drive/personal-frontend-boilerplate/components/ObjectTree.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { MdExpandMore, MdChevronRight } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst literalToTreeItem = literal => {\n  switch (typeof literal) {\n    case \"function\":\n      return __jsx(TreeItem, {\n        nodeId: uuid(),\n        label: __jsx(\"pre\", {\n          class: \"prettyprint\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, literal.toString()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n\n    default:\n      return __jsx(TreeItem, {\n        nodeId: uuid(),\n        label: literal.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n  }\n};\n\nconst objectToTreeItem = object => Object.entries(object).map(([key, value]) => __jsx(TreeItem, {\n  nodeId: uuid(),\n  label: key.toString(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, toTreeItems(value)));\n\nconst toTreeItems = thing => {\n  if (typeof thing === \"object\") {\n    // don't render empty objects\n    if (JSON.stringify(thing) === \"{}\") return __jsx(React.Fragment, null);else return objectToTreeItem(thing);\n  } else return literalToTreeItem(thing);\n};\n\nexport const ObjectTree = ({\n  object,\n  className\n}) => __jsx(React.Fragment, null, __jsx(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, __jsx(\"script\", {\n  src: \"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), __jsx(TreeView, {\n  defaultCollapseIcon: __jsx(MdExpandMore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }),\n  defaultExpandIcon: __jsx(MdChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }),\n  className: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, toTreeItems(object)));","map":{"version":3,"sources":["/Users/vonnegut/drive/personal-frontend-boilerplate/components/ObjectTree.jsx"],"names":["Head","TreeView","TreeItem","MdExpandMore","MdChevronRight","uuid","literalToTreeItem","literal","toString","objectToTreeItem","object","Object","entries","map","key","value","toTreeItems","thing","JSON","stringify","ObjectTree","className"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,gBAA7C;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,iBAAiB,GAAGC,OAAO,IAAI;AACnC,UAAQ,OAAOA,OAAf;AACE,SAAK,UAAL;AACE,aACE,MAAC,QAAD;AACE,QAAA,MAAM,EAAEF,IAAI,EADd;AAEE,QAAA,KAAK,EAAE;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BE,OAAO,CAACC,QAAR,EAA1B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAMF;AACE,aAAO,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEH,IAAI,EAAtB;AAA0B,QAAA,KAAK,EAAEE,OAAO,CAACC,QAAR,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AATJ;AAWD,CAZD;;AAcA,MAAMC,gBAAgB,GAAGC,MAAM,IAC7BC,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,GAAvB,CAA2B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACzB,MAAC,QAAD;AAAU,EAAA,MAAM,EAAEV,IAAI,EAAtB;AAA0B,EAAA,KAAK,EAAES,GAAG,CAACN,QAAJ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGQ,WAAW,CAACD,KAAD,CADd,CADF,CADF;;AAOA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B;AACA,QAAIC,IAAI,CAACC,SAAL,CAAeF,KAAf,MAA0B,IAA9B,EAAoC,OAAO,2BAAP,CAApC,KACK,OAAOR,gBAAgB,CAACQ,KAAD,CAAvB;AACN,GAJD,MAIO,OAAOX,iBAAiB,CAACW,KAAD,CAAxB;AACR,CAND;;AAQA,OAAO,MAAMG,UAAU,GAAG,CAAC;AAAEV,EAAAA,MAAF;AAAUW,EAAAA;AAAV,CAAD,KACxB,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,GAAG,EAAC,gFAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIE,MAAC,QAAD;AACE,EAAA,mBAAmB,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB;AAEE,EAAA,iBAAiB,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB;AAGE,EAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKGL,WAAW,CAACN,MAAD,CALd,CAJF,CADK","sourcesContent":["import Head from \"next/head\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { MdExpandMore, MdChevronRight } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst literalToTreeItem = literal => {\n  switch (typeof literal) {\n    case \"function\":\n      return (\n        <TreeItem\n          nodeId={uuid()}\n          label={<pre class=\"prettyprint\">{literal.toString()}</pre>}\n        />\n      );\n    default:\n      return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n  }\n};\n\nconst objectToTreeItem = object =>\n  Object.entries(object).map(([key, value]) => (\n    <TreeItem nodeId={uuid()} label={key.toString()}>\n      {toTreeItems(value)}\n    </TreeItem>\n  ));\n\nconst toTreeItems = thing => {\n  if (typeof thing === \"object\") {\n    // don't render empty objects\n    if (JSON.stringify(thing) === \"{}\") return <></>;\n    else return objectToTreeItem(thing);\n  } else return literalToTreeItem(thing);\n};\n\nexport const ObjectTree = ({ object, className }) => (\n  <>\n    <Head>\n      <script src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\"></script>\n    </Head>\n    <TreeView\n      defaultCollapseIcon={<MdExpandMore />}\n      defaultExpandIcon={<MdChevronRight />}\n      className\n    >\n      {toTreeItems(object)}\n    </TreeView>\n  </>\n);\n"]},"metadata":{},"sourceType":"module"}
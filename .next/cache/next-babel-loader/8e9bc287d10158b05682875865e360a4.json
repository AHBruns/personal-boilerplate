{"ast":null,"code":"var _jsxFileName = \"/Users/vonnegut/drive/personal-frontend-boilerplate/components/ObjectTree.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst toTreeItems = object => {\n  switch (typeof object) {\n    case \"object\":\n      {}\n\n    default:\n      {\n        __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: object.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }\n  }\n\n  const entries = Object.entries(object);\n  return entries.map(([key, value]) => {\n    switch (typeof key) {}\n\n    switch (typeof value) {\n      case \"number\":\n        return __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n\n      case \"string\":\n        return __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n\n      case \"object\":\n        if (JSON.stringify(value) === \"{}\") return __jsx(React.Fragment, null);\n\n        if (Array.isArray(value)) {\n          const arrayEntries = Object.values(value);\n          return arrayEntries.map(toTreeItems);\n        } else return __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, toTreeItems(value));\n\n      default:\n        return __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, __jsx(TreeItem, {\n          nodeId: uuid(),\n          label: `UNKNOWN TYPE: ${typeof value}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n    }\n  });\n};\n\nexport const ObjectTree = ({\n  object\n}) => __jsx(TreeView, {\n  defaultCollapseIcon: __jsx(MdExpandMore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }),\n  defaultExpandIcon: __jsx(MdExpandLess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, toTreeItems(object));","map":{"version":3,"sources":["/Users/vonnegut/drive/personal-frontend-boilerplate/components/ObjectTree.jsx"],"names":["TreeView","TreeItem","MdExpandLess","MdExpandMore","uuid","toTreeItems","object","toString","entries","Object","map","key","value","JSON","stringify","Array","isArray","arrayEntries","values","ObjectTree"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,WAAW,GAAGC,MAAM,IAAI;AAC5B,UAAQ,OAAOA,MAAf;AACE,SAAK,QAAL;AAAe,OACd;;AACD;AAAS;AACP,cAAC,QAAD;AAAU,UAAA,MAAM,EAAEF,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAEE,MAAM,CAACC,QAAP,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AALH;;AAQA,QAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeF,MAAf,CAAhB;AAEA,SAAOE,OAAO,CAACE,GAAR,CAAY,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACnC,YAAQ,OAAOD,GAAf;;AAGA,YAAQ,OAAOC,KAAf;AACE,WAAK,QAAL;AACE,eAAO,MAAC,QAAD;AAAU,UAAA,MAAM,EAAER,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAEO,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,QAAL;AACE,eACE,MAAC,QAAD;AAAU,UAAA,MAAM,EAAEP,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAEO,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,QAAD;AAAU,UAAA,MAAM,EAAEP,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAEQ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;;AAKF,WAAK,QAAL;AACE,YAAIC,IAAI,CAACC,SAAL,CAAeF,KAAf,MAA0B,IAA9B,EAAoC,OAAO,2BAAP;;AACpC,YAAIG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;AACxB,gBAAMK,YAAY,GAAGR,MAAM,CAACS,MAAP,CAAcN,KAAd,CAArB;AACA,iBAAOK,YAAY,CAACP,GAAb,CAAiBL,WAAjB,CAAP;AACD,SAHD,MAIE,OACE,MAAC,QAAD;AAAU,UAAA,MAAM,EAAED,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAEO,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,WAAW,CAACO,KAAD,CADd,CADF;;AAKJ;AACE,eACE,MAAC,QAAD;AAAU,UAAA,MAAM,EAAER,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAEO,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,QAAD;AAAU,UAAA,MAAM,EAAEP,IAAI,EAAtB;AAA0B,UAAA,KAAK,EAAG,iBAAgB,OAAOQ,KAAM,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AArBJ;AA2BD,GA/BM,CAAP;AAgCD,CA3CD;;AA6CA,OAAO,MAAMO,UAAU,GAAG,CAAC;AAAEb,EAAAA;AAAF,CAAD,KACxB,MAAC,QAAD;AACE,EAAA,mBAAmB,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB;AAEE,EAAA,iBAAiB,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIGD,WAAW,CAACC,MAAD,CAJd,CADK","sourcesContent":["import { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport uuid from \"uuid/v4\";\n\nconst toTreeItems = object => {\n  switch (typeof object) {\n    case \"object\": {\n    }\n    default: {\n      <TreeItem nodeId={uuid()} label={object.toString()} />;\n    }\n  }\n\n  const entries = Object.entries(object);\n\n  return entries.map(([key, value]) => {\n    switch (typeof key) {\n    }\n\n    switch (typeof value) {\n      case \"number\":\n        return <TreeItem nodeId={uuid()} label={key}></TreeItem>;\n      case \"string\":\n        return (\n          <TreeItem nodeId={uuid()} label={key}>\n            <TreeItem nodeId={uuid()} label={value} />\n          </TreeItem>\n        );\n      case \"object\":\n        if (JSON.stringify(value) === \"{}\") return <></>;\n        if (Array.isArray(value)) {\n          const arrayEntries = Object.values(value);\n          return arrayEntries.map(toTreeItems);\n        } else\n          return (\n            <TreeItem nodeId={uuid()} label={key}>\n              {toTreeItems(value)}\n            </TreeItem>\n          );\n      default:\n        return (\n          <TreeItem nodeId={uuid()} label={key}>\n            <TreeItem nodeId={uuid()} label={`UNKNOWN TYPE: ${typeof value}`} />\n          </TreeItem>\n        );\n    }\n  });\n};\n\nexport const ObjectTree = ({ object }) => (\n  <TreeView\n    defaultCollapseIcon={<MdExpandMore />}\n    defaultExpandIcon={<MdExpandLess />}\n  >\n    {toTreeItems(object)}\n  </TreeView>\n);\n"]},"metadata":{},"sourceType":"module"}
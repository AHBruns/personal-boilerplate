{"ast":null,"code":"var _jsxFileName = \"/Users/vonnegut/drive/personal-frontend-boilerplate/pages/palette.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { useTheme, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport { makePageTitle } from \"../utils/helpers\";\nimport { ObjectTree } from \"../components/ObjectTree\";\nconst useStyles = makeStyles({\n  padding: {\n    padding: \"32px\"\n  },\n  preBlock: {\n    margin: \"16px\",\n    borderRadius: \"4px\",\n    fontFamily: \"Source Code Pro\",\n    border: \"1px solid black\",\n    borderRadius: \"4px\",\n    padding: \"4px 10px\",\n    overflowX: \"scroll\"\n  }\n});\nexport default (() => {\n  const theme = useTheme();\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, makePageTitle(\"Palette\"))), __jsx(\"p\", {\n    className: classes.padding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Below is the theme object used in this project. Any and all styling should be driven by this object. If for some \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"extreme\"), \" \", \"reason, you need to inject styles outside this theme, please comment the offending code with a clear reason and your name. Additionally, while style injections should be avoided in general, when styles outside of this theme object are injected they should be done so via\", \" \", __jsx(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"import \", makeStyles, \" from \\\"@material-ui/core/styles\\\";\"), \" rather than inline jss,\", \" \", __jsx(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"<style jsx>{`.selector { color: red; }`}</style>\"), \", or (even worse) style props. Finally, if you believe something should be added to this blurb please bring it up with the team at your next standup. Code and style standards are an evolving thing and they only get better when devs speak their minds.\"), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(ObjectTree, {\n    object: theme,\n    customLiteralToTreeItem: literal => {\n      switch (typeof literal) {\n        case \"function\":\n          return __jsx(React.Fragment, null, __jsx(Head, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, __jsx(\"link\", {\n            href: \"https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap\",\n            rel: \"stylesheet\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          })), __jsx(TreeItem, {\n            nodeId: uuid(),\n            label: __jsx(\"pre\", {\n              className: `${classes.preBlock}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, __jsx(\"code\", {\n              className: `language-javascript ${classes.codeBlock}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, literal.toString())),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }));\n\n        case \"string\":\n          {\n            if (literal.startsWith(\"rgba(\") && literal.endsWith(\")\")) return __jsx(React.Fragment, null, __jsx(\"div\", {\n              className: _JSXStyle.dynamic([[\"1456904422\", [literal]]]) + \" \" + \"rgba-wrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            }, __jsx(TreeItem, {\n              nodeId: uuid(),\n              label: literal,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            })), __jsx(_JSXStyle, {\n              id: \"1456904422\",\n              dynamic: [literal],\n              __self: this\n            }, `.rgba-wrapper.__jsx-style-dynamic-selector{color:${literal};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92b25uZWd1dC9kcml2ZS9wZXJzb25hbC1mcm9udGVuZC1ib2lsZXJwbGF0ZS9wYWdlcy9wYWxldHRlLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRmdDLEFBRzRELG1DQUNyQyIsImZpbGUiOiIvVXNlcnMvdm9ubmVndXQvZHJpdmUvcGVyc29uYWwtZnJvbnRlbmQtYm9pbGVycGxhdGUvcGFnZXMvcGFsZXR0ZS5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgeyBUcmVlSXRlbSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvbGFiXCI7XG5pbXBvcnQgeyB1c2VUaGVtZSwgRGl2aWRlciB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZVwiO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXNcIjtcbmltcG9ydCB1dWlkIGZyb20gXCJ1dWlkL3Y0XCI7XG5pbXBvcnQgeyBtYWtlUGFnZVRpdGxlIH0gZnJvbSBcIi4uL3V0aWxzL2hlbHBlcnNcIjtcbmltcG9ydCB7IE9iamVjdFRyZWUgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9PYmplY3RUcmVlXCI7XG5cbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoe1xuICBwYWRkaW5nOiB7XG4gICAgcGFkZGluZzogXCIzMnB4XCJcbiAgfSxcbiAgcHJlQmxvY2s6IHtcbiAgICBtYXJnaW46IFwiMTZweFwiLFxuICAgIGJvcmRlclJhZGl1czogXCI0cHhcIixcbiAgICBmb250RmFtaWx5OiBcIlNvdXJjZSBDb2RlIFByb1wiLFxuICAgIGJvcmRlcjogXCIxcHggc29saWQgYmxhY2tcIixcbiAgICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gICAgcGFkZGluZzogXCI0cHggMTBweFwiLFxuICAgIG92ZXJmbG93WDogXCJzY3JvbGxcIlxuICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPnttYWtlUGFnZVRpdGxlKFwiUGFsZXR0ZVwiKX08L3RpdGxlPlxuICAgICAgPC9IZWFkPlxuICAgICAgPHAgY2xhc3NOYW1lPXtjbGFzc2VzLnBhZGRpbmd9PlxuICAgICAgICBCZWxvdyBpcyB0aGUgdGhlbWUgb2JqZWN0IHVzZWQgaW4gdGhpcyBwcm9qZWN0LiBBbnkgYW5kIGFsbCBzdHlsaW5nXG4gICAgICAgIHNob3VsZCBiZSBkcml2ZW4gYnkgdGhpcyBvYmplY3QuIElmIGZvciBzb21lIDxzdHJvbmc+ZXh0cmVtZTwvc3Ryb25nPntcIiBcIn1cbiAgICAgICAgcmVhc29uLCB5b3UgbmVlZCB0byBpbmplY3Qgc3R5bGVzIG91dHNpZGUgdGhpcyB0aGVtZSwgcGxlYXNlIGNvbW1lbnQgdGhlXG4gICAgICAgIG9mZmVuZGluZyBjb2RlIHdpdGggYSBjbGVhciByZWFzb24gYW5kIHlvdXIgbmFtZS4gQWRkaXRpb25hbGx5LCB3aGlsZVxuICAgICAgICBzdHlsZSBpbmplY3Rpb25zIHNob3VsZCBiZSBhdm9pZGVkIGluIGdlbmVyYWwsIHdoZW4gc3R5bGVzIG91dHNpZGUgb2ZcbiAgICAgICAgdGhpcyB0aGVtZSBvYmplY3QgYXJlIGluamVjdGVkIHRoZXkgc2hvdWxkIGJlIGRvbmUgc28gdmlhe1wiIFwifVxuICAgICAgICA8Y29kZT5pbXBvcnQge21ha2VTdHlsZXN9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXNcIjs8L2NvZGU+IHJhdGhlclxuICAgICAgICB0aGFuIGlubGluZSBqc3Mse1wiIFwifVxuICAgICAgICA8Y29kZT57XCI8c3R5bGUganN4PntgLnNlbGVjdG9yIHsgY29sb3I6IHJlZDsgfWB9PC9zdHlsZT5cIn08L2NvZGU+LCBvclxuICAgICAgICAoZXZlbiB3b3JzZSkgc3R5bGUgcHJvcHMuIEZpbmFsbHksIGlmIHlvdSBiZWxpZXZlIHNvbWV0aGluZyBzaG91bGQgYmVcbiAgICAgICAgYWRkZWQgdG8gdGhpcyBibHVyYiBwbGVhc2UgYnJpbmcgaXQgdXAgd2l0aCB0aGUgdGVhbSBhdCB5b3VyIG5leHRcbiAgICAgICAgc3RhbmR1cC4gQ29kZSBhbmQgc3R5bGUgc3RhbmRhcmRzIGFyZSBhbiBldm9sdmluZyB0aGluZyBhbmQgdGhleSBvbmx5XG4gICAgICAgIGdldCBiZXR0ZXIgd2hlbiBkZXZzIHNwZWFrIHRoZWlyIG1pbmRzLlxuICAgICAgPC9wPlxuICAgICAgPERpdmlkZXIgLz5cbiAgICAgIDxPYmplY3RUcmVlXG4gICAgICAgIG9iamVjdD17dGhlbWV9XG4gICAgICAgIGN1c3RvbUxpdGVyYWxUb1RyZWVJdGVtPXtsaXRlcmFsID0+IHtcbiAgICAgICAgICBzd2l0Y2ggKHR5cGVvZiBsaXRlcmFsKSB7XG4gICAgICAgICAgICBjYXNlIFwiZnVuY3Rpb25cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgPEhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDxsaW5rXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Tb3VyY2UrQ29kZStQcm8mZGlzcGxheT1zd2FwXCJcbiAgICAgICAgICAgICAgICAgICAgICByZWw9XCJzdHlsZXNoZWV0XCJcbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDwvSGVhZD5cbiAgICAgICAgICAgICAgICAgIDxUcmVlSXRlbVxuICAgICAgICAgICAgICAgICAgICBub2RlSWQ9e3V1aWQoKX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e1xuICAgICAgICAgICAgICAgICAgICAgIDxwcmUgY2xhc3NOYW1lPXtgJHtjbGFzc2VzLnByZUJsb2NrfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgbGFuZ3VhZ2UtamF2YXNjcmlwdCAke2NsYXNzZXMuY29kZUJsb2NrfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtsaXRlcmFsLnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2NvZGU+XG4gICAgICAgICAgICAgICAgICAgICAgPC9wcmU+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjYXNlIFwic3RyaW5nXCI6IHtcbiAgICAgICAgICAgICAgaWYgKGxpdGVyYWwuc3RhcnRzV2l0aChcInJnYmEoXCIpICYmIGxpdGVyYWwuZW5kc1dpdGgoXCIpXCIpKVxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJnYmEtd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxUcmVlSXRlbSBub2RlSWQ9e3V1aWQoKX0gbGFiZWw9e2xpdGVyYWx9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7LypcbiAgICAgICAgICAgICAgICAgICAgICogVXNpbmcganNzIGJlY2F1c2UgaXQncyB0aGUgY2xlYW5lc3Qgd2F5IHRvIGluamVjdCB0aGVzZSBzdHlsZXMuXG4gICAgICAgICAgICAgICAgICAgICAqIG1ha2VTdHlsZXMgZG9lc24ndCB3b3JrIGJlY2F1c2UgaXQncyBhIGhvb2sgJiBzdHlsZSBwcm9wIGlzIGhpZ2hseSBkaXNjb3VyYWdlZFxuICAgICAgICAgICAgICAgICAgICAgKi99XG4gICAgICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAgICAgICAucmdiYS13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke2xpdGVyYWx9O1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgcmV0dXJuIDxUcmVlSXRlbSBub2RlSWQ9e3V1aWQoKX0gbGFiZWw9e2xpdGVyYWx9IC8+O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgcmV0dXJuIDxUcmVlSXRlbSBub2RlSWQ9e3V1aWQoKX0gbGFiZWw9e2xpdGVyYWwudG9TdHJpbmcoKX0gLz47XG4gICAgICAgICAgfVxuICAgICAgICB9fVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXMucGFkZGluZ31cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuIl19 */\n/*@ sourceURL=/Users/vonnegut/drive/personal-frontend-boilerplate/pages/palette.jsx */`));\n            return __jsx(TreeItem, {\n              nodeId: uuid(),\n              label: literal,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            });\n          }\n\n        default:\n          return __jsx(TreeItem, {\n            nodeId: uuid(),\n            label: literal.toString(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          });\n      }\n    },\n    className: classes.padding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/vonnegut/drive/personal-frontend-boilerplate/pages/palette.jsx"],"names":["Head","TreeItem","useTheme","Divider","makeStyles","uuid","makePageTitle","ObjectTree","useStyles","padding","preBlock","margin","borderRadius","fontFamily","border","overflowX","theme","classes","literal","codeBlock","toString","startsWith","endsWith"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { useTheme, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport { makePageTitle } from \"../utils/helpers\";\nimport { ObjectTree } from \"../components/ObjectTree\";\n\nconst useStyles = makeStyles({\n  padding: {\n    padding: \"32px\"\n  },\n  preBlock: {\n    margin: \"16px\",\n    borderRadius: \"4px\",\n    fontFamily: \"Source Code Pro\",\n    border: \"1px solid black\",\n    borderRadius: \"4px\",\n    padding: \"4px 10px\",\n    overflowX: \"scroll\"\n  }\n});\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <>\n      <Head>\n        <title>{makePageTitle(\"Palette\")}</title>\n      </Head>\n      <p className={classes.padding}>\n        Below is the theme object used in this project. Any and all styling\n        should be driven by this object. If for some <strong>extreme</strong>{\" \"}\n        reason, you need to inject styles outside this theme, please comment the\n        offending code with a clear reason and your name. Additionally, while\n        style injections should be avoided in general, when styles outside of\n        this theme object are injected they should be done so via{\" \"}\n        <code>import {makeStyles} from \"@material-ui/core/styles\";</code> rather\n        than inline jss,{\" \"}\n        <code>{\"<style jsx>{`.selector { color: red; }`}</style>\"}</code>, or\n        (even worse) style props. Finally, if you believe something should be\n        added to this blurb please bring it up with the team at your next\n        standup. Code and style standards are an evolving thing and they only\n        get better when devs speak their minds.\n      </p>\n      <Divider />\n      <ObjectTree\n        object={theme}\n        customLiteralToTreeItem={literal => {\n          switch (typeof literal) {\n            case \"function\":\n              return (\n                <>\n                  <Head>\n                    <link\n                      href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap\"\n                      rel=\"stylesheet\"\n                    />\n                  </Head>\n                  <TreeItem\n                    nodeId={uuid()}\n                    label={\n                      <pre className={`${classes.preBlock}`}>\n                        <code\n                          className={`language-javascript ${classes.codeBlock}`}\n                        >\n                          {literal.toString()}\n                        </code>\n                      </pre>\n                    }\n                  />\n                </>\n              );\n            case \"string\": {\n              if (literal.startsWith(\"rgba(\") && literal.endsWith(\")\"))\n                return (\n                  <>\n                    <div className=\"rgba-wrapper\">\n                      <TreeItem nodeId={uuid()} label={literal} />\n                    </div>\n                    {/*\n                     * Using jss because it's the cleanest way to inject these styles.\n                     * makeStyles doesn't work because it's a hook & style prop is highly discouraged\n                     */}\n                    <style jsx>{`\n                      .rgba-wrapper {\n                        color: ${literal};\n                      }\n                    `}</style>\n                  </>\n                );\n              return <TreeItem nodeId={uuid()} label={literal} />;\n            }\n            default:\n              return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n          }\n        }}\n        className={classes.padding}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
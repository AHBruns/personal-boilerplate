{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _preBlock,\n    _jsxFileName = \"/Users/vonnegut/drive/personal-frontend-boilerplate/pages/palette.jsx\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { useTheme, Divider, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport { makePageTitle } from \"../utils/helpers\";\nimport { ObjectTree } from \"../components/ObjectTree\";\nvar useStyles = makeStyles({\n  wrapper: {\n    padding: \"32px\"\n  },\n  header: {},\n  preBlock: (_preBlock = {\n    margin: \"16px\",\n    borderRadius: \"4px\",\n    fontFamily: \"Source Code Pro\",\n    border: \"1px solid black\"\n  }, _defineProperty(_preBlock, \"borderRadius\", \"4px\"), _defineProperty(_preBlock, \"padding\", \"4px 10px\"), _defineProperty(_preBlock, \"overflowX\", \"scroll\"), _preBlock)\n});\nexport default (function () {\n  var theme = useTheme();\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, makePageTitle(\"Palette\"))), __jsx(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Below is the theme object used in this project. Any styles which are used in more than one place or are expected to be used in more than one place should be defined via this object rather than via in-line styles injection via makeStyles, jss, or style props.\"), __jsx(ObjectTree, {\n    object: theme,\n    customLiteralToTreeItem: function customLiteralToTreeItem(literal) {\n      switch (typeof literal) {\n        case \"function\":\n          return __jsx(React.Fragment, null, __jsx(Head, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, __jsx(\"link\", {\n            href: \"https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap\",\n            rel: \"stylesheet\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          })), __jsx(TreeItem, {\n            nodeId: uuid(),\n            label: __jsx(\"pre\", {\n              className: \"\".concat(classes.preBlock),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, __jsx(\"code\", {\n              className: \"language-javascript \".concat(classes.codeBlock),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }, literal.toString())),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }));\n\n        case \"string\":\n          {\n            if (literal.startsWith(\"rgba(\") && literal.endsWith(\")\")) return __jsx(React.Fragment, null, __jsx(\"div\", {\n              className: _JSXStyle.dynamic([[\"4100267622\", [literal]]]) + \" \" + \"rgba-wrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, __jsx(TreeItem, {\n              nodeId: uuid(),\n              label: literal,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            })), __jsx(_JSXStyle, {\n              id: \"4100267622\",\n              dynamic: [literal],\n              __self: this\n            }, \".rgba-wrapper.__jsx-style-dynamic-selector{color:\".concat(literal, \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92b25uZWd1dC9kcml2ZS9wZXJzb25hbC1mcm9udGVuZC1ib2lsZXJwbGF0ZS9wYWdlcy9wYWxldHRlLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RWtDLEFBRzhELG1DQUNyQyIsImZpbGUiOiIvVXNlcnMvdm9ubmVndXQvZHJpdmUvcGVyc29uYWwtZnJvbnRlbmQtYm9pbGVycGxhdGUvcGFnZXMvcGFsZXR0ZS5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgeyBUcmVlSXRlbSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvbGFiXCI7XG5pbXBvcnQgeyB1c2VUaGVtZSwgRGl2aWRlciwgVHlwb2dyYXBoeSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZVwiO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXNcIjtcbmltcG9ydCB1dWlkIGZyb20gXCJ1dWlkL3Y0XCI7XG5pbXBvcnQgeyBtYWtlUGFnZVRpdGxlIH0gZnJvbSBcIi4uL3V0aWxzL2hlbHBlcnNcIjtcbmltcG9ydCB7IE9iamVjdFRyZWUgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9PYmplY3RUcmVlXCI7XG5cbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoe1xuICB3cmFwcGVyOiB7XG4gICAgcGFkZGluZzogXCIzMnB4XCJcbiAgfSxcbiAgaGVhZGVyOiB7fSxcbiAgcHJlQmxvY2s6IHtcbiAgICBtYXJnaW46IFwiMTZweFwiLFxuICAgIGJvcmRlclJhZGl1czogXCI0cHhcIixcbiAgICBmb250RmFtaWx5OiBcIlNvdXJjZSBDb2RlIFByb1wiLFxuICAgIGJvcmRlcjogXCIxcHggc29saWQgYmxhY2tcIixcbiAgICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gICAgcGFkZGluZzogXCI0cHggMTBweFwiLFxuICAgIG92ZXJmbG93WDogXCJzY3JvbGxcIlxuICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPnttYWtlUGFnZVRpdGxlKFwiUGFsZXR0ZVwiKX08L3RpdGxlPlxuICAgICAgPC9IZWFkPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMud3JhcHBlcn0+XG4gICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNVwiPlxuICAgICAgICAgIEJlbG93IGlzIHRoZSB0aGVtZSBvYmplY3QgdXNlZCBpbiB0aGlzIHByb2plY3QuIEFueSBzdHlsZXMgd2hpY2ggYXJlXG4gICAgICAgICAgdXNlZCBpbiBtb3JlIHRoYW4gb25lIHBsYWNlIG9yIGFyZSBleHBlY3RlZCB0byBiZSB1c2VkIGluIG1vcmUgdGhhblxuICAgICAgICAgIG9uZSBwbGFjZSBzaG91bGQgYmUgZGVmaW5lZCB2aWEgdGhpcyBvYmplY3QgcmF0aGVyIHRoYW4gdmlhIGluLWxpbmVcbiAgICAgICAgICBzdHlsZXMgaW5qZWN0aW9uIHZpYSBtYWtlU3R5bGVzLCBqc3MsIG9yIHN0eWxlIHByb3BzLlxuICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgIDxPYmplY3RUcmVlXG4gICAgICAgICAgb2JqZWN0PXt0aGVtZX1cbiAgICAgICAgICBjdXN0b21MaXRlcmFsVG9UcmVlSXRlbT17bGl0ZXJhbCA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKHR5cGVvZiBsaXRlcmFsKSB7XG4gICAgICAgICAgICAgIGNhc2UgXCJmdW5jdGlvblwiOlxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8SGVhZD5cbiAgICAgICAgICAgICAgICAgICAgICA8bGlua1xuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Tb3VyY2UrQ29kZStQcm8mZGlzcGxheT1zd2FwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbD1cInN0eWxlc2hlZXRcIlxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvSGVhZD5cbiAgICAgICAgICAgICAgICAgICAgPFRyZWVJdGVtXG4gICAgICAgICAgICAgICAgICAgICAgbm9kZUlkPXt1dWlkKCl9XG4gICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e1xuICAgICAgICAgICAgICAgICAgICAgICAgPHByZSBjbGFzc05hbWU9e2Ake2NsYXNzZXMucHJlQmxvY2t9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgbGFuZ3VhZ2UtamF2YXNjcmlwdCAke2NsYXNzZXMuY29kZUJsb2NrfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bGl0ZXJhbC50b1N0cmluZygpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NvZGU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3ByZT5cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBjYXNlIFwic3RyaW5nXCI6IHtcbiAgICAgICAgICAgICAgICBpZiAobGl0ZXJhbC5zdGFydHNXaXRoKFwicmdiYShcIikgJiYgbGl0ZXJhbC5lbmRzV2l0aChcIilcIikpXG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmdiYS13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VHJlZUl0ZW0gbm9kZUlkPXt1dWlkKCl9IGxhYmVsPXtsaXRlcmFsfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIHsvKlxuICAgICAgICAgICAgICAgICAgICAgICAqIFVzaW5nIGpzcyBiZWNhdXNlIGl0J3MgdGhlIGNsZWFuZXN0IHdheSB0byBpbmplY3QgdGhlc2Ugc3R5bGVzLlxuICAgICAgICAgICAgICAgICAgICAgICAqIG1ha2VTdHlsZXMgZG9lc24ndCB3b3JrIGJlY2F1c2UgaXQncyBhIGhvb2sgJiBzdHlsZSBwcm9wIGlzIGhpZ2hseSBkaXNjb3VyYWdlZFxuICAgICAgICAgICAgICAgICAgICAgICAqL31cbiAgICAgICAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgICAgICAgICAucmdiYS13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7bGl0ZXJhbH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDxUcmVlSXRlbSBub2RlSWQ9e3V1aWQoKX0gbGFiZWw9e2xpdGVyYWx9IC8+O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDxUcmVlSXRlbSBub2RlSWQ9e3V1aWQoKX0gbGFiZWw9e2xpdGVyYWwudG9TdHJpbmcoKX0gLz47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufTtcbiJdfQ== */\\n/*@ sourceURL=/Users/vonnegut/drive/personal-frontend-boilerplate/pages/palette.jsx */\")));\n            return __jsx(TreeItem, {\n              nodeId: uuid(),\n              label: literal,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            });\n          }\n\n        default:\n          return __jsx(TreeItem, {\n            nodeId: uuid(),\n            label: literal.toString(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/vonnegut/drive/personal-frontend-boilerplate/pages/palette.jsx"],"names":["Head","TreeItem","useTheme","Divider","Typography","makeStyles","uuid","makePageTitle","ObjectTree","useStyles","wrapper","padding","header","preBlock","margin","borderRadius","fontFamily","border","theme","classes","literal","codeBlock","toString","startsWith","endsWith"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { useTheme, Divider, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport { makePageTitle } from \"../utils/helpers\";\nimport { ObjectTree } from \"../components/ObjectTree\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    padding: \"32px\"\n  },\n  header: {},\n  preBlock: {\n    margin: \"16px\",\n    borderRadius: \"4px\",\n    fontFamily: \"Source Code Pro\",\n    border: \"1px solid black\",\n    borderRadius: \"4px\",\n    padding: \"4px 10px\",\n    overflowX: \"scroll\"\n  }\n});\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <>\n      <Head>\n        <title>{makePageTitle(\"Palette\")}</title>\n      </Head>\n      <div className={classes.wrapper}>\n        <Typography variant=\"h5\">\n          Below is the theme object used in this project. Any styles which are\n          used in more than one place or are expected to be used in more than\n          one place should be defined via this object rather than via in-line\n          styles injection via makeStyles, jss, or style props.\n        </Typography>\n        <ObjectTree\n          object={theme}\n          customLiteralToTreeItem={literal => {\n            switch (typeof literal) {\n              case \"function\":\n                return (\n                  <>\n                    <Head>\n                      <link\n                        href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap\"\n                        rel=\"stylesheet\"\n                      />\n                    </Head>\n                    <TreeItem\n                      nodeId={uuid()}\n                      label={\n                        <pre className={`${classes.preBlock}`}>\n                          <code\n                            className={`language-javascript ${classes.codeBlock}`}\n                          >\n                            {literal.toString()}\n                          </code>\n                        </pre>\n                      }\n                    />\n                  </>\n                );\n              case \"string\": {\n                if (literal.startsWith(\"rgba(\") && literal.endsWith(\")\"))\n                  return (\n                    <>\n                      <div className=\"rgba-wrapper\">\n                        <TreeItem nodeId={uuid()} label={literal} />\n                      </div>\n                      {/*\n                       * Using jss because it's the cleanest way to inject these styles.\n                       * makeStyles doesn't work because it's a hook & style prop is highly discouraged\n                       */}\n                      <style jsx>{`\n                        .rgba-wrapper {\n                          color: ${literal};\n                        }\n                      `}</style>\n                    </>\n                  );\n                return <TreeItem nodeId={uuid()} label={literal} />;\n              }\n              default:\n                return <TreeItem nodeId={uuid()} label={literal.toString()} />;\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}